CREATE_CONTAINER_INTENT = "CreateContainer"
ADD_ATTRIBUTE_INTENT = "AddAttribute"
ADD_METHOD_INTENT = "AddMethod"
CHANGE_NAME_INTENT = "ChangeName"
CHANGE_VISIBILITY_INTENT = "ChangeVisibility"
CHANGE_DATATYPE_INTENT = "ChangeDatatype"
ADD_RELATION_INTENT = "AddRelation"
DELETE_INTENT = "Delete"
FOCUS_INTENT = "Focus"
MOVE_INTENT = "Move"
UNDO_INTENT = "Undo"

TEMPLATE_QUERIES = {
    CREATE_CONTAINER_INTENT: [
        "Create a {container_abstraction} {element_type} named {element_name}",
        "Define a {container_abstraction} {element_type} called {element_name}",
        "Create a new {container_abstraction} {element_type} named {element_name}",
        "Add a {container_abstraction} {element_type} named {element_name} to the diagram",
        "Make a {container_abstraction} {element_type} with the title {element_name}",
        "Define a {container_abstraction} {element_type} and name it {element_name}",
        "Create a {container_abstraction} {element_type} called {element_name}",
        "Add a new {container_abstraction} {element_type} named {element_name}",
        "Make a {container_abstraction} {element_type} and name it {element_name}",
        "Insert a {container_abstraction} {element_type} {element_name} into the current diagram",
        "I want to add a new {container_abstraction} {element_type} named {element_name} to the diagram",
        "Declare a {container_abstraction} {element_type} {element_name}",
        "I would like to add a new {container_abstraction} {element_type} named {element_name}",
        "Please insert a {container_abstraction} {element_type} called {element_name} into the diagram",
        "Could you create a {container_abstraction} {element_type} titled {element_name}?",
        "Let's add a new {container_abstraction} {element_type} named {element_name} to our diagram",
        "Please create a {container_abstraction} {element_type} and name it {element_name}",
    ],
    ADD_ATTRIBUTE_INTENT: [
        "Add a {visibility} {element_type} named {element_name} {datatype}",
        "Introduce a {visibility} {element_type} {element_name} {datatype}",
        "Define a {visibility} {element_type} {element_name} {datatype}",
        "Add {element_name} as a {visibility} {element_type} {datatype}",
        "Include {element_name} as a {visibility} {element_type} {datatype}",
        "Create the {visibility} {element_type} {element_name} {datatype}",
        "Add the {visibility} {element_type} {element_name} {datatype}",
        "Please add an {visibility} {element_type} named {element_name} {datatype}",
        "I would like to introduce a new {visibility} {element_type} called {element_name} {datatype}",
        "Can you insert a {visibility} {element_type} named {element_name} {datatype}?",
        "Include a {visibility} {element_type} {element_name} {datatype}",
        "I need you to add a {visibility} {element_type} named {element_name} {datatype}",
        "Please introduce a {visibility} {element_type} called {element_name} {datatype}",
        "Add the {visibility} {element_type} {element_name} {datatype}",
        "Create the {visibility} {element_type} {element_name} {datatype}",
    ],
    ADD_METHOD_INTENT: [
        "Define a {visibility} {element_type} {element_name}",
        "Add {element_name} as a {visibility} {element_type}",
        "Include the {visibility} {element_type} {element_name}",
        "Implement a {visibility} {element_type} named {element_name}",
        "Create a new {visibility} {element_type} called {element_name}",
        "Introduce a {visibility} {element_type} {element_name}",
        "Insert a {visibility} {element_type} named {element_name}",
        "Develop a {visibility} {element_type} {element_name}",
        "Construct a {visibility} {element_type} {element_name}",
        "Establish a {visibility} {element_type} {element_name}",
        "Generate a {visibility} {element_type} {element_name}",
        "Add a {visibility} {element_type} named {element_name}",
        "Please add a {visibility} {element_type} named {element_name}",
        "I would like to include a {visibility} {element_type} called {element_name}",
        "Can you insert a {visibility} {element_type} titled {element_name}?",
        "Lets introduce a {visibility} {element_type} named {element_name}",
    ],
    CHANGE_NAME_INTENT: [
        "Update the name to {new_value}",
        "Rename to {new_value}",
        "Change the name to {new_value}",
        "Replace the name with {new_value}",
        "Please rename to {new_value}",
        "I would like to change the name to {new_value}",
        "Can you update the name to {new_value}?",
        "I need it renamed to {new_value}",
        "Edit the name to {new_value}",
        "Rename to {new_value}",
        "Please change the name to {new_value}",
        "I would like to rename it to {new_value}",
        "Can you update the name to {new_value}",
        "Let's change the name to {new_value}",
    ],
    CHANGE_VISIBILITY_INTENT: [
        "Change the visibility to {new_value}",
        "Revise the visibility to {new_value}",
        "Set the visibility to {new_value}",
        "Please change the visibility to {new_value}",
        "I would like to set the visibility to {new_value}",
        "Can you set the visibility {new_value}?",
    ],
    CHANGE_DATATYPE_INTENT: [
        "Alter the datatype to {new_value}",
        "Modify the datatype to {new_value}",
        "Change the type to {new_value}",
    ],
    DELETE_INTENT: [
        "Remove {element_type} {element_name}",
        "Delete {element_type} {element_name}",
        "Erase {element_type} {element_name}",
    ],
    ADD_RELATION_INTENT: [
        "Add a {relation_type} called {element_name} between {class_name_from} and {class_name_to}",
        "Between classes {class_name_from} and {class_name_to}, create a {relation_type} with the name {element_name}",
        "Establish a {relation_type} relationship with the name {element_name} from {class_name_from} to {class_name_to}",
        "Create a {relation_type} called {element_name} linking {class_name_from} with {class_name_to}",
        "Form a {relation_type} named {element_name} between {class_name_from} and {class_name_to}",
        "Connect {class_name_from} and {class_name_to} with a {relation_type} called {element_name}",
        "Set up a {relation_type} with the name {element_name} from {class_name_from} to {class_name_to}",
        "Implement a {relation_type} between {class_name_from} and {class_name_to} named {element_name}",
        "Define a {relation_type} relationship called {element_name} linking {class_name_from} to {class_name_to}",
        "Construct a {relation_type} with the name {element_name} that connects {class_name_from} to {class_name_to}",
    ],
    FOCUS_INTENT: [
        "Focus on {element_type} {element_name}",
        "Select the {element_type} {element_name}",
        "I want to set the focus to {element_type} {element_name}",
        "Please select {element_type} {element_name}",
        "Can you focus on {element_type} {element_name}?",
        "Switch focus to {element_type} {element_name}",
    ],
    MOVE_INTENT: [
        "Move it to the {direction} of the {element_type} {element_name}",
        "Place it {direction} of the {element_type} {element_name}",
        "Position it {direction} to {element_type} {element_name}",
    ],
    UNDO_INTENT: [
        "undo",
        "undo last operation",
        "undo the last operation",
        "rollback last operation",
        "rollback the last operation",
    ],
}

CONTAINER_ABSTRACTIONS = ["abstract"]
CONTAINER_TYPES = [
    "class",
    "interface",
    "data type",
    "enumeration",
    "instance",
    "package",
    "primitive type",
]

ATTRIBUTE_TYPES = ["attribute", "field", "property", "parameter"]
METHOD_TYPES = ["function", "method", "operation"]  # have the same meaning
CONTAINER_NAMES = [
    "Vehicle",
    "Employee",
    "Order",
    "Customer",
    "Mountain",
    "Smartphone",
    "Espresso",
    "Rainforest",
    "Novel",
    "Solar",
    "Symphony",
    "Volcano",
    "Airplane",
    "Satellite",
    "Icecream",
    "Skateboard",
    "Coral",
    "Vaccine",
    "Robot",
    "Bamboo",
    "Algorithm",
    "Tsunami",
    "Sculpture",
    "Windmill",
    "Aurora",
    "Telescope",
    "Origami",
    "Drone",
    "Cactus",
    "Guitar",
    "Printer",
    "River",
    "Bridge",
    "Book",
    "Chair",
    "Laptop",
    "Jacket",
    "Wallet",
    "Bicycle",
    "Clock",
    "Pen",
    "Glass",
    "Phone",
    "Spoon",
    "Table",
    "Bottle",
    "Shirt",
    "Shoe",
    "Hat",
    "Sock",
    "Pillow",
    "Lamp",
    "Fork",
    "Key",
]
VISIBILITIES = ["public", "private", "protected"]
ATTRIBUTE_NAMES = [
    "id",
    "name",
    "email",
    "address",
    "Size",
    "Age",
    "Rating",
    "Color",
    "Quantity",
    "Price",
    "Weight",
    "Height",
    "Length",
    "Width",
    "Depth",
    "Material",
    "Condition",
    "Texture",
    "Taste",
    "Smell",
    "Sound",
    "Brightness",
    "Hardness",
    "Temperature",
    "Speed",
    "Capacity",
    "Durability",
    "Flexibility",
    "Efficiency",
    "Accuracy",
    "Complexity",
    "Rarity",
    "Popularity",
    "Reliability",
    "Brand",
    "Origin",
    "Warranty",
    "Power",
    "Voltage",
    "Energy",
    "Frequency",
    "Bandwidth",
    "Resolution",
    "Contrast",
    "Saturation",
    "Latency",
    "Throughput",
    "Coverage",
    "Range",
    "Connectivity",
    "Compatibility",
    "Security",
    "Portability",
    "Functionality",
]
ACTION_NAMES = [
    "calculate total",
    "update profile",
    "save changes",
    "delete account",
    "fetch data",
    "validate user",
    "refresh page",
    "render view",
    "get details",
    "set preferences",
    "clear cache",
    "encrypt data",
    "decrypt data",
    "submit form",
    "load resources",
    "initiate connection",
    "disconnect",
    "archive records",
    "generate report",
    "log error",
    "send notification",
    "parse input",
    "format output",
    "schedule task",
    "cancel operation",
]
RELATION_TYPES = [
    "abstraction",
    "aggregation",
    "strong aggregation",
    "association",
    "composition",
    "dependency",
    "generalisation",
    "usage",
]
DATATYPES = [
    "Integer",
    "double",
    "float",
    "boolean",
    "Character",
    "byte",
    "short",
    "long",
    "Date",
    "String",
    "List",
    "Map",
    "Set",
]
DIRECTIONS = ["north", "west", "east", "south", "top", "left", "bottom", "right"]
